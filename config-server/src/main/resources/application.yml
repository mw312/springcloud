server:
  port: 8888

spring:
  application:
    name: config-server
  #配置中心从github上拉数据#
  cloud:
      config:
        label: master
        server:
          git:
            uri: https://github.com/mw312/springcloud
            searchPaths: springCloudConfig
      # 开启消息跟踪（GET方法调用：/trace）
      bus:
        trace:
          enabled: true
  # 开启rabbitmq实现异步消息推送
  # 1.配置文件变更后通过POST方法触发配置中心的/bus/refresh，通过消息以及事件的形式实现所有连接配置中心的客户端节点的配置文件的同步更新
  # 2.通过/bus/refresh?destination=serviceAppName来刷新消息总线上指定的微服务实例[serviceAppName指的是各个微服务的ApplicationContext ID]
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8760/eureka/

#actuator暴露的接口（例如：/health; /dump; /env; /metrics等）的安全策略
management:
  context-path: /admin    #前缀
  port: 11111             #端口，为了和api接口使用的端口进行分离
  security:
    enabled: false        #是否需要安全保证

logging:
  level:
    org.springframework.cloud: 'INFO'





